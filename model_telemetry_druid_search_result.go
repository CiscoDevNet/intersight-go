/*
Cisco Intersight

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.11-2025081401
Contact: intersight@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package intersight

import (
	"encoding/json"
	"time"
)

// checks if the TelemetryDruidSearchResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TelemetryDruidSearchResult{}

// TelemetryDruidSearchResult Dimension value matching the search query.
type TelemetryDruidSearchResult struct {
	// The ISO 8601 timestamp.
	Timestamp *time.Time `json:"timestamp,omitempty"`
	// A list of dimension values
	Result               []map[string]interface{} `json:"result,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TelemetryDruidSearchResult TelemetryDruidSearchResult

// NewTelemetryDruidSearchResult instantiates a new TelemetryDruidSearchResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTelemetryDruidSearchResult() *TelemetryDruidSearchResult {
	this := TelemetryDruidSearchResult{}
	return &this
}

// NewTelemetryDruidSearchResultWithDefaults instantiates a new TelemetryDruidSearchResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTelemetryDruidSearchResultWithDefaults() *TelemetryDruidSearchResult {
	this := TelemetryDruidSearchResult{}
	return &this
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *TelemetryDruidSearchResult) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TelemetryDruidSearchResult) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *TelemetryDruidSearchResult) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *TelemetryDruidSearchResult) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *TelemetryDruidSearchResult) GetResult() []map[string]interface{} {
	if o == nil || IsNil(o.Result) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TelemetryDruidSearchResult) GetResultOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *TelemetryDruidSearchResult) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given []map[string]interface{} and assigns it to the Result field.
func (o *TelemetryDruidSearchResult) SetResult(v []map[string]interface{}) {
	o.Result = v
}

func (o TelemetryDruidSearchResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TelemetryDruidSearchResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TelemetryDruidSearchResult) UnmarshalJSON(data []byte) (err error) {
	varTelemetryDruidSearchResult := _TelemetryDruidSearchResult{}

	err = json.Unmarshal(data, &varTelemetryDruidSearchResult)

	if err != nil {
		return err
	}

	*o = TelemetryDruidSearchResult(varTelemetryDruidSearchResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "timestamp")
		delete(additionalProperties, "result")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTelemetryDruidSearchResult struct {
	value *TelemetryDruidSearchResult
	isSet bool
}

func (v NullableTelemetryDruidSearchResult) Get() *TelemetryDruidSearchResult {
	return v.value
}

func (v *NullableTelemetryDruidSearchResult) Set(val *TelemetryDruidSearchResult) {
	v.value = val
	v.isSet = true
}

func (v NullableTelemetryDruidSearchResult) IsSet() bool {
	return v.isSet
}

func (v *NullableTelemetryDruidSearchResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTelemetryDruidSearchResult(val *TelemetryDruidSearchResult) *NullableTelemetryDruidSearchResult {
	return &NullableTelemetryDruidSearchResult{value: val, isSet: true}
}

func (v NullableTelemetryDruidSearchResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTelemetryDruidSearchResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
