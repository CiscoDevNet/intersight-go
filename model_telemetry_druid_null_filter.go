/*
Cisco Intersight

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.11-16342
Contact: intersight@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package intersight

import (
	"encoding/json"
	"fmt"
)

// checks if the TelemetryDruidNullFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TelemetryDruidNullFilter{}

// TelemetryDruidNullFilter The null filter is a partial replacement for the selector filter. It is dedicated to matching NULL values.
type TelemetryDruidNullFilter struct {
	Type string `json:"type"`
	// Input column or virtual column name to filter.
	Column               string `json:"column"`
	AdditionalProperties map[string]interface{}
}

type _TelemetryDruidNullFilter TelemetryDruidNullFilter

// NewTelemetryDruidNullFilter instantiates a new TelemetryDruidNullFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTelemetryDruidNullFilter(type_ string, column string) *TelemetryDruidNullFilter {
	this := TelemetryDruidNullFilter{}
	this.Type = type_
	this.Column = column
	return &this
}

// NewTelemetryDruidNullFilterWithDefaults instantiates a new TelemetryDruidNullFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTelemetryDruidNullFilterWithDefaults() *TelemetryDruidNullFilter {
	this := TelemetryDruidNullFilter{}
	return &this
}

// GetType returns the Type field value
func (o *TelemetryDruidNullFilter) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TelemetryDruidNullFilter) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TelemetryDruidNullFilter) SetType(v string) {
	o.Type = v
}

// GetColumn returns the Column field value
func (o *TelemetryDruidNullFilter) GetColumn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Column
}

// GetColumnOk returns a tuple with the Column field value
// and a boolean to check if the value has been set.
func (o *TelemetryDruidNullFilter) GetColumnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Column, true
}

// SetColumn sets field value
func (o *TelemetryDruidNullFilter) SetColumn(v string) {
	o.Column = v
}

func (o TelemetryDruidNullFilter) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TelemetryDruidNullFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["column"] = o.Column

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TelemetryDruidNullFilter) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"column",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTelemetryDruidNullFilter := _TelemetryDruidNullFilter{}

	err = json.Unmarshal(data, &varTelemetryDruidNullFilter)

	if err != nil {
		return err
	}

	*o = TelemetryDruidNullFilter(varTelemetryDruidNullFilter)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "column")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTelemetryDruidNullFilter struct {
	value *TelemetryDruidNullFilter
	isSet bool
}

func (v NullableTelemetryDruidNullFilter) Get() *TelemetryDruidNullFilter {
	return v.value
}

func (v *NullableTelemetryDruidNullFilter) Set(val *TelemetryDruidNullFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableTelemetryDruidNullFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableTelemetryDruidNullFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTelemetryDruidNullFilter(val *TelemetryDruidNullFilter) *NullableTelemetryDruidNullFilter {
	return &NullableTelemetryDruidNullFilter{value: val, isSet: true}
}

func (v NullableTelemetryDruidNullFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTelemetryDruidNullFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
